adim,bdim,cdim,condim,type,dtype,label
"(12, 20)","(20, 8, 20)","(12, 8, 20)","([-1], [0])",ab * bcd -> acd,float32,ab * bcd -> acd-fp32
"(12, 20)","(20, 8, 20)","(12, 8, 20)","([-1], [0])",ab * bcd -> acd,float16,ab * bcd -> acd-fp16
"(120, 200)","(200, 80, 200)","(120, 80, 200)","([-1], [0])",ab * bcd -> acd,float32,ab * bcd -> acd-fp32
"(120, 200)","(200, 80, 200)","(120, 80, 200)","([-1], [0])",ab * bcd -> acd,float16,ab * bcd -> acd-fp16
"(1200, 2000)","(2000, 800, 2000)","(1200, 800, 2000)","([-1], [0])",ab * bcd -> acd,float32,ab * bcd -> acd-fp32
"(1200, 2000)","(2000, 800, 2000)","(1200, 800, 2000)","([-1], [0])",ab * bcd -> acd,float16,ab * bcd -> acd-fp16
"(1200, 200)","(200, 800, 200)","(1200, 800, 200)","([-1], [0])",ab * bcd -> acd,float32,ab * bcd -> acd-fp32
"(1200, 200)","(200, 800, 200)","(1200, 800, 200)","([-1], [0])",ab * bcd -> acd,float16,ab * bcd -> acd-fp16
"(12, 8, 20)","(20, 8, 20)","(12, 8, 8, 20)","([-1], [0])",abc * cde -> abde,float32,abc * cde -> abde-fp32
"(12, 8, 20)","(20, 8, 20)","(12, 8, 8, 20)","([-1], [0])",abc * cde -> abde,float16,abc * cde -> abde-fp16
"(120, 80, 200)","(200, 80, 200)","(120, 80, 80, 200)","([-1], [0])",abc * cde -> abde,float32,abc * cde -> abde-fp32
"(120, 80, 200)","(200, 80, 200)","(120, 80, 80, 200)","([-1], [0])",abc * cde -> abde,float16,abc * cde -> abde-fp16
"(1200, 800, 2000)","(2000, 800, 2000)","(1200, 800, 800, 2000)","([-1], [0])",abc * cde -> abde,float32,abc * cde -> abde-fp32
"(1200, 800, 2000)","(2000, 800, 2000)","(1200, 800, 800, 2000)","([-1], [0])",abc * cde -> abde,float16,abc * cde -> abde-fp16
"(1200, 800, 200)","(200, 800, 200)","(1200, 800, 800, 200)","([-1], [0])",abc * cde -> abde,float32,abc * cde -> abde-fp32
"(1200, 800, 200)","(200, 800, 200)","(1200, 800, 800, 200)","([-1], [0])",abc * cde -> abde,float16,abc * cde -> abde-fp16
"(16, 16, 20)","(20, 12, 20)","(16, 16, 12, 20)","([-1],[0])",abc * cde -> abde,float32,abc * cde -> abde-fp32
"(16, 16, 20)","(20, 12, 20)","(16, 16, 12, 20)","([-1],[0])",abc * cde -> abde,float16,abc * cde -> abde-fp16
"(160, 160, 200)","(200, 120, 200)","(160, 160, 120, 200)","([-1],[0])",abc * cde -> abde,float32,abc * cde -> abde-fp32
"(160, 160, 200)","(200, 120, 200)","(160, 160, 120, 200)","([-1],[0])",abc * cde -> abde,float16,abc * cde -> abde-fp16
"(1600, 1600, 2000)","(2000, 1200, 2000)","(1600, 1600, 1200, 2000)","([-1],[0])",abc * cde -> abde,float32,abc * cde -> abde-fp32
"(1600, 1600, 2000)","(2000, 1200, 2000)","(1600, 1600, 1200, 2000)","([-1],[0])",abc * cde -> abde,float16,abc * cde -> abde-fp16
"(1600, 1600, 200)","(200, 1200, 200)","(1600, 1600, 1200, 200)","([-1],[0])",abc * cde -> abde,float32,abc * cde -> abde-fp32
"(1600, 1600, 200)","(200, 1200, 200)","(1600, 1600, 1200, 200)","([-1],[0])",abc * cde -> abde,float16,abc * cde -> abde-fp16
"(32, 20)","(20, 8, 8, 12)","(32, 8, 8, 12)","([-1],[0])",ab * bcde -> acde,float32,ab * bcde -> acde-fp32
"(32, 20)","(20, 8, 8, 12)","(32, 8, 8, 12)","([-1],[0])",ab * bcde -> acde,float16,ab * bcde -> acde-fp16
"(320, 200)","(200, 80, 80, 120)","(320, 80, 80, 120)","([-1],[0])",ab * bcde -> acde,float32,ab * bcde -> acde-fp32
"(320, 200)","(200, 80, 80, 120)","(320, 80, 80, 120)","([-1],[0])",ab * bcde -> acde,float16,ab * bcde -> acde-fp16
"(3200, 2000)","(2000, 800, 800, 1200)","(3200, 800, 800, 1200)","([-1],[0])",ab * bcde -> acde,float32,ab * bcde -> acde-fp32
"(3200, 2000)","(2000, 800, 800, 1200)","(3200, 800, 800, 1200)","([-1],[0])",ab * bcde -> acde,float16,ab * bcde -> acde-fp16
"(3200, 200)","(200, 800, 800, 120)","(3200, 800, 800, 120)","([-1],[0])",ab * bcde -> acde,float32,ab * bcde -> acde-fp32
"(3200, 200)","(200, 800, 800, 120)","(3200, 800, 800, 120)","([-1],[0])",ab * bcde -> acde,float16,ab * bcde -> acde-fp16
"(4096, 768)","(20, 768)","(4096, 20)","([1], [1])",ab * cb -> ac,float32,ab * cb -> ac-fp32
"(4096, 768)","(20, 768)","(4096, 20)","([1], [1])",ab * cb -> ac,float16,ab * cb -> ac-fp16
"(40960, 7680)","(200, 7680)","(40960, 200)","([1], [1])",ab * cb -> ac,float32,ab * cb -> ac-fp32
"(40960, 7680)","(200, 7680)","(40960, 200)","([1], [1])",ab * cb -> ac,float16,ab * cb -> ac-fp16
"(409600, 76800)","(2000, 76800)","(409600, 2000)","([1], [1])",ab * cb -> ac,float32,ab * cb -> ac-fp32
"(409600, 76800)","(2000, 76800)","(409600, 2000)","([1], [1])",ab * cb -> ac,float16,ab * cb -> ac-fp16
"(40960, 7680)","(2000, 7680)","(40960, 2000)","([1], [1])",ab * cb -> ac,float32,ab * cb -> ac-fp32
"(40960, 7680)","(2000, 7680)","(40960, 2000)","([1], [1])",ab * cb -> ac,float16,ab * cb -> ac-fp16
"(20, 8, 8, 20)","(20, 8, 20)","(20, 8, 20)","([2,3], [1,2])",abcd * ecd -> abe,float32,abcd * ecd -> abe-fp32
"(20, 8, 8, 20)","(20, 8, 20)","(20, 8, 20)","([2,3], [1,2])",abcd * ecd -> abe,float16,abcd * ecd -> abe-fp16
"(200, 80, 80, 200)","(200, 80, 200)","(200, 80, 200)","([2,3], [1,2])",abcd * ecd -> abe,float32,abcd * ecd -> abe-fp32
"(200, 80, 80, 200)","(200, 80, 200)","(200, 80, 200)","([2,3], [1,2])",abcd * ecd -> abe,float16,abcd * ecd -> abe-fp16
"(2000, 800, 800, 2000)","(2000, 800, 2000)","(2000, 800, 2000)","([2,3], [1,2])",abcd * ecd -> abe,float32,abcd * ecd -> abe-fp32
"(2000, 800, 800, 2000)","(2000, 800, 2000)","(2000, 800, 2000)","([2,3], [1,2])",abcd * ecd -> abe,float16,abcd * ecd -> abe-fp16
"(2000, 800, 80, 200)","(2000, 80, 200)","(2000, 800, 2000)","([2,3], [1,2])",abcd * ecd -> abe,float32,abcd * ecd -> abe-fp32
"(2000, 800, 80, 200)","(2000, 80, 200)","(2000, 800, 2000)","([2,3], [1,2])",abcd * ecd -> abe,float16,abcd * ecd -> abe-fp16
"(12, 64, 20)","(20, 64, 20)","(12, 20)","([1,2], [1,2])",abc * ebc -> ae,float32,abc * ebc -> ae-fp32
"(12, 64, 20)","(20, 64, 20)","(12, 20)","([1,2], [1,2])",abc * ebc -> ae,float16,abc * ebc -> ae-fp16
"(120, 640, 200)","(200, 640, 200)","(120, 200)","([1,2], [1,2])",abc * ebc -> ae,float32,abc * ebc -> ae-fp32
"(120, 640, 200)","(200, 640, 200)","(120, 200)","([1,2], [1,2])",abc * ebc -> ae,float16,abc * ebc -> ae-fp16
"(1200, 6400, 2000)","(2000, 6400, 2000)","(1200, 2000)","([1,2], [1,2])",abc * ebc -> ae,float32,abc * ebc -> ae-fp32
"(1200, 6400, 2000)","(2000, 6400, 2000)","(1200, 2000)","([1,2], [1,2])",abc * ebc -> ae,float16,abc * ebc -> ae-fp16
"(1200, 640, 200)","(2000, 640, 200)","(1200, 2000)","([1,2], [1,2])",abc * ebc -> ae,float32,abc * ebc -> ae-fp32
"(1200, 640, 200)","(2000, 640, 200)","(1200, 2000)","([1,2], [1,2])",abc * ebc -> ae,float16,abc * ebc -> ae-fp16
"(100, 100, 100)","(100, 100, 100)","(100, 100, 100, 100)","([2], [2])",abc * cde -> abde,float32,abc * cde -> abde-fp32
"(100, 100, 100)","(100, 100, 100)","(100, 100, 100, 100)","([2], [2])",abc * cde -> abde,float16,abc * cde -> abde-fp16
"(50, 50, 50)","(50, 50, 50)","(50, 50, 50, 50)","([2], [2])",abc * cde -> abde,float32,abc * cde -> abde-fp32
"(50, 50, 50)","(50, 50, 50)","(50, 50, 50, 50)","([2], [2])",abc * cde -> abde,float16,abc * cde -> abde-fp16
"(300, 300)","(300, 300)","(300, 300)","([1], [1])",ab * cb -> ac,float32,ab * cb -> ac-fp32
"(300, 300)","(300, 300)","(300, 300)","([1], [1])",ab * cb -> ac,float16,ab * cb -> ac-fp16
"(100, 100)","(100, 100)","(100, 100)","([1], [1])",ab * cb -> ac,float32,ab * cb -> ac-fp32
"(100, 100)","(100, 100)","(100, 100)","([1], [1])",ab * cb -> ac,float16,ab * cb -> ac-fp16
"(600, 600)","(600, 600)","(600, 600)","([1], [1])",ab * cb -> ac,float32,ab * cb -> ac-fp32
"(600, 600)","(600, 600)","(600, 600)","([1], [1])",ab * cb -> ac,float16,ab * cb -> ac-fp16
"(50, 50)","(50, 50)","(50, 50)","([1], [1])",ab * cb -> ac,float32,ab * cb -> ac-fp32
"(50, 50)","(50, 50)","(50, 50)","([1], [1])",ab * cb -> ac,float16,ab * cb -> ac-fp16